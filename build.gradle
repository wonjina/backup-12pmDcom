plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'net.ltgt.apt' version '0.15'
}

group = 'com.gabia.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

apply plugin: "net.ltgt.apt"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
/*

	implementation 'org.mapstruct:mapstruct:1.3.1.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
*/	compile('org.mapstruct:mapstruct:1.3.0.Beta2')
	compileOnly('org.mapstruct:mapstruct-processor:1.3.0.Beta2')
	annotationProcessor('org.mapstruct:mapstruct-processor:1.3.0.Beta2')

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.hibernate:hibernate-jpamodelgen'
	annotationProcessor 'org.hibernate:hibernate-jpamodelgen'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	compile 'org.apache.httpcomponents:httpclient:4.5.11'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation "org.testng:testng:6.10", "org.easytesting:fest-assert:1.4"

	implementation 'org.springframework.boot:spring-boot-starter-security'
	testCompile "org.springframework.security:spring-security-test"

	compile 'io.jsonwebtoken:jjwt:0.9.0'
    implementation 'junit:junit:4.12'
}


sourceSets.configureEach { sourceSet ->
	tasks.named(sourceSet.compileJavaTaskName).configure {
		options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/java")
	}
}


test {
	useJUnitPlatform()
}
